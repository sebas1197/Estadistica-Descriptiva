5+5
5+5
5+5
5+5+5
print("Hello World!")
"Hello World!"
"Hello World!"
plot(1:10)
plot(2:10)
name <- "Sebas"
age <- 26
name <- "Daniela"
name
age2
imprimir <- function(){
print("Hola desde la funcion")
}
imprimir()
imprimir <- function(){
print("Hola desde la funcion")
print("Segundo mensaje")
}
imprimir()
imprimir <- function(){
print("Hola desde la funcion")
x <- 5
y <- 5
}
imprimir()
suma <- function(){
x <- 5
y <- 10
print(x + y)
}
suma()
suma <- function(x, y){
print(x + y)
}
suma()
suma(4, 3)
calcularEdad <- function(anioNacimiento){
edadActual <- 2024 - anioNacimiento
return(edadActual)
}
calcularEdad(1997)
colores <- c("Azul", "Verde", "Rosa", "Ladrillo")
print(colores)
numeros <- 1:10
numeros
print(length(colores))
length(numeros)
plot(2,3)
plot(1,2)
plot(1,2)
plot(1, 2)
plot(1, 2)
plot(1:10, main="My Graph", xlab="The x-axis", ylab="The y axis")
plot(1:3, main="My Graph", xlab="The x-axis", ylab="The y axis")
# Create a vector of pies
x <- c(10,20,30,40)
# Display the pie chart
pie(x)
# Create a vector of pies
x <- c(10,20,30,40)
# Display the pie chart
pie(x)
# Display the pie chart
pie(x)
# Display the pie chart
pie(x)
# Display the pie chart
pie(x)
data("cars")
x <- cars$dist
library(agricolae)
library(agricolae)
install.packages("agricolae")
listax <- hist(x, plot = FALSE)
tablaFrecuencia <- table.freq(listax)
data("cars")
distancias <- cars$dist
library(agricolae)
listax <- hist(distancias, plot = FALSE)
tablaFrecuencia <- table.freq(listax)
View(tablaFrecuencia)
data("airmiles")
data("airmiles")
force(airmiles)
data("airmiles")
data("ChickWeight")
force(ChickWeight)
data("airmiles")
force(airmiles)
data("co2")
force(co2)
x <- CO2$Plant
x
x <- CO2$conc
x
listax <- hist(x, plot = FALSE)
t <- table.freq(listax)
View(tablaFrecuencia)
t <- table.freq(listax)
View(t)
View(tablaFrecuencia)
distancias.length()
length(distancias)
table(distancias)
hist(distancias)
hist(distancias)
data("co2")
hist(distancias)
hist(distancias)
# Datos de ejemplo (frecuencias)
frecuencias <- c(10, 20, 15, 25, 30)
# Calculamos los ángulos para los vértices del polígono
angulos <- seq(0, 2 * pi, length.out = length(frecuencias) + 1)
# Coordenadas x e y de los vértices del polígono
x <- cos(angulos) * frecuencias
y <- sin(angulos) * frecuencias
# Crear el gráfico del polígono
plot(x, y, type = "l", col = "blue", lwd = 2, xlim = c(-max(frecuencias), max(frecuencias)), ylim = c(-max(frecuencias), max(frecuencias)))
polygon(x, y, col = "lightblue", border = "blue")
# Etiquetas de los ejes
axis(1)
axis(2)
# Título y etiquetas
title(main = "Polígono de Frecuencias")
hist(distancias)
polygon.freq(distancias)
h <- hist(distancias)
polygon.freq(h)
polygon.freq(h, lwd = 2)
h <- hist(distancias, xlab = "algo")
datos <- c(10, 15, 20, 25, 30, 35, 40, 45, 50)
frecuencia_acumulada <- cumsum(datos)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b", xlab = "Clases", ylab = "Frecuencia Acumulada",
main = "Diagrama de Ojiva", ylim = c(0, max(frecuencia_acumulada) * 1.1))
datos <- c(10, 15, 20, 25, 30, 35, 40, 45, 50)
frecuencia_acumulada <- cumsum(datos)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, ylim = c(0, max(frecuencia_acumulada) * 1.1))
datos <- c(10, 15, 20, 25, 30, 35, 40, 45, 50)
frecuencia_acumulada <- cumsum(datos)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b",
ylim = c(0, max(frecuencia_acumulada) * 1.1))
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "l",
ylim = c(0, max(frecuencia_acumulada) * 1.1))
frecuencia_acumulada <- cumsum(distancias)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "l",
ylim = c(0, max(frecuencia_acumulada) * 1.1))
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b",
ylim = c(0, max(frecuencia_acumulada) * 1.1))
polygon.freq(h, lwd = 2)
h <- hist(distancias)
polygon.freq(h, lwd = 2)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b",
ylim = c(0, max(frecuencia_acumulada) * 1.1))
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b")
h <- hist(distancias)
polygon.freq(h, lwd = 2)
h <- hist(distancias)
polygon.freq(h, lwd = 2)
frecuencia_acumulada <- cumsum(distancias)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b")
tablaFrecuencia <- table.freq(listax)
View(tablaFrecuencia)
# Dibujar el diagrama de ojiva
plot(frecuencia_acumulada, type = "b",
ylim = c(0, max(frecuencia_acumulada) * 1.1))
h <- hist(distancias)
polygon.freq(h, lwd = 2)
barplot(distancias)
pie(distancias)
rango1 <- distancias[1:5]
pie(rango1)
data("cars")
data("cars")
force(cars)
View(cars)
View(cars)
View(cars)
print(distancias)
distancias <- cars$dist
print(distancias)
library(agricolae)
listax <- hist(distancias, plot = FALSE)
View(listax)
View(listax)
tablaFrecuencia <- table.freq(listax)
View(tablaFrecuencia)
length(distancias)
n <- length(distancias)
histograma <- hist(distancias)
histograma <- hist(distancias, main = "Titulo")
polygon.freq(histograma)
polygon.freq(histograma, lwd = 2)
barplot(distancias)
rango1 <- distancias[1:5]
barplot(rango1)
pie(rango1)
pie(distancias)
pie(rango1)
distancias <- cars$dist
View(cars)
barplot(distancias)
data("cars")
distancias <- cars$dist
barplot(distancias)
rango1 <- distancias[1:5]
barplot(rango1)
pie(distancias)
mostrarVectorDatos(distancias)
data("cars")
distancias <- cars$dist
mostrarVectorDatos <-
function(vector){
print(vector)
}
tablaFrecuencia <-
function(vector){
listax <-
hist(vector,
plot = FALSE)
tf <-
table.freq(listax)
View(tf)
}
muestra <- function(vector){
n <- length(vector)
paste("El tamaño de mi muestra es: ", n)
}
nombresColumnas <- function(){
print(
"1) Límite inferior
2) Límite superior
3) Marca de clase
4) Frecuencia absoluta
5) Frecuencia relativa
6) Frecuencia acumulada
7) Frecuencia acumulada relativa"
)
}
histograma <- function(vector){
view(hist(vector, main = "Titulo"))
}
poligonoFrecuencia <- function(histograma){
polygon.freq(histograma, lwd = 2)
}
diagramaBarras <- function(vector){
barplot(vector)
}
diagramaPastel <- function(vector){
pie(vector)
}
mostrarVectorDatos(distancias)
tablaFrecuencia(distancias)
library(agricolae)
tablaFrecuencia(distancias)
muestra(distancias)
nombresColumnas()
histograma(distancias)
histograma <- function(vector){
hist(vector, main = "Titulo")
}
histograma(distancias)
poligonoFrecuencia <- function(histograma){
polygon.freq(histograma, lwd = 2)
}
poligonoFrecuencia(distancias)
histo
histograma <- function(vector){
return(hist(vector, main = "Titulo"))
}
hist <- histograma(distancias)
poligonoFrecuencia(hist)
diagramaBarras(distancias)
diagramaPastel(distancias)
excel <- read.csv("Walmart_sales.csv")
excel <- read.csv("Walmart_sales.csv")
print(excel)
excel <- read.csv("Walmart_sales.csv")
setwd("E:/SEBASTIAN/Job/ITQ/Statistics/Estadistica-Descriptiva")
excel <- read.csv("Walmart_sales.csv")
print(excel)
print(excel$Fuel_Price)
mean(excel$Fuel_Price)
excel <- read.csv("GTAV_Steam_Reviews.csv")
print(excel$votes_up)
median(excel$voted_up)
mean(excel$voted_up)
print(excel$comment_count)
mean(excel$comment_count)
x <- c(11,6,7,7,4)
mean(x)
x <- c(2,2,3,5,7,7,9,10)
mean(x)
media <- function(vector){
return(mean(vector))
}
media <- function(vector){
paste("La media del vector es: ", mean(vector()))
}
x <- c(11,6,7,7,4)
media(x)
media <- function(vector){
return(mean(vector))
}
media(x)
x <- c(4,6,7,7,11)
mediana <- function(vector){
return(median(vector))
}
mediana(x)
data <- read.csv("train.csv")
data <- read.csv("train.csv")
x <- data$Weekly_Sales
media(x)
media <- function(vector){
return(mean(vector))
}
media(x)
data <- read.csv("train.csv")
print(data)
x <- data$Weekly_Sales
print(x)
print(length(x))
media <- function(vector){
return(mean(vector))
}
mediana <- function(vector){
x <- sort(vector)
return(median(x))
}
moda <- function(x) {
return(as.numeric(
names(which.max(table(x)))))
}
media(x)
mediana(x)
moda(x)
x <- c(11,2,4,7,6,5,8,11)
R <- max(x) - min(x)
print(R)
Rg<-function(x){
rang<-max(x) - min(x)
paste("el rango es: ", rang)
}
Rg(x)
x <- c(11,2,4,7,6,5,8,11)
varianza <- function(vector){
return(var(vector, na.rm = FALSE))
}
varianza(x)
